version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: tentrental-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: tent-rental-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 15

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: tentrental-api
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:5000
      ConnectionStrings__Default: Host=db;Port=5432;Database=tent-rental-db;Username=postgres;***REMOVED***
      ALLOWED_ORIGINS: "http://localhost:${WEB_PORT:-5173}"
    ports:
      - "${API_PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5000/health"]
      interval: 10s
      timeout: 3s
      retries: 15

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: tentrental-web
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: "http://localhost:${API_PORT:-5000}"
      VITE_STRIPE_PUBLISHABLE_KEY: "${VITE_STRIPE_PUBLISHABLE_KEY:-pk_test_placeholder}"
      NODE_ENV: development
    ports:
      - "${WEB_PORT:-5173}:5173"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5173"]
      interval: 10s
      timeout: 3s
      retries: 15

volumes:
  pgdata:
